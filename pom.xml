<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.learnjakartaee</groupId>
	<artifactId>learn-jakartaee</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>learn-jakartaee</name>
	<description>Learn Jakarta EE</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
	</parent>

	<properties>
		<java.version>17</java.version>

		<jakartaee.version>9.1.0</jakartaee.version>
		<microprofile.version>5.0</microprofile.version>

		<!-- https://github.com/OpenLiberty/ci.maven -->
		<liberty-maven-plugin.version>3.7.1</liberty-maven-plugin.version>
		<liberty-runtime.version>23.0.0.2</liberty-runtime.version>
		<liberty.loose-application>true</liberty.loose-application>

		<!-- https://codehaus-cargo.github.io/cargo/Maven+3+Plugin+Reference+Guide.html -->
		<!-- https://codehaus-cargo.github.io/cargo/Configuration+properties.html -->
		<cargo-maven-plugin.version>1.10.6</cargo-maven-plugin.version>
		<cargo-wildfly-runtime>wildfly27x</cargo-wildfly-runtime>
		<!-- Property is intended to be used in module dirs -->
		<cargo-wildfly-script.dir>${project.basedir}/..</cargo-wildfly-script.dir>

		<cargo-glassfish-runtime>glassfish7x</cargo-glassfish-runtime>

		<!-- https://tomee.apache.org/master/docs/tomee-maven-plugin.html -->
		<tomee-maven-plugin.version>9.1.0</tomee-maven-plugin.version>
		<tomee-runtime.version>9.1.0</tomee-runtime.version>

		<!-- Odds and ends -->
		<ognl.version>3.3.4</ognl.version>

		<!-- Library support for Open Liberty -->
		<repo.dir>${user.home}/.m2/repository</repo.dir>
		<!-- Application Code -->
		<liberty.var.config>${repo.dir}/io/github/learnjakartaee/learn-jakartaee-config/${project.version}/learn-jakartaee-config-${project.version}.jar</liberty.var.config>
		<liberty.var.envutil>${repo.dir}/io/github/learnjakartaee/learn-jakartaee-env/${project.version}/learn-jakartaee-env-${project.version}.jar</liberty.var.envutil>
		<liberty.var.datasourceutil>${repo.dir}/io/github/learnjakartaee/learn-jakartaee-datasource/${project.version}/learn-jakartaee-datasource-${project.version}.jar</liberty.var.datasourceutil>
		<!-- Logging Libraries -->
		<liberty.var.slf4j>${repo.dir}/org/slf4j/slf4j-api/${slf4j.version}/slf4j-api-${slf4j.version}.jar</liberty.var.slf4j>
		<liberty.var.slf4jjdk14>${repo.dir}/org/slf4j/slf4j-jdk14/${slf4j.version}/slf4j-jdk14-${slf4j.version}.jar</liberty.var.slf4jjdk14>
		<!-- DataSource / Driver Libraries -->
		<liberty.var.hikaricp>${repo.dir}/com/zaxxer/HikariCP/${hikaricp.version}/HikariCP-${hikaricp.version}.jar</liberty.var.hikaricp>
		<liberty.var.derbypath>${repo.dir}/org/apache/derby/derby/${derby.version}/derby-${derby.version}.jar</liberty.var.derbypath>
		<liberty.var.derbyclientpath>${repo.dir}/org/apache/derby/derbyclient/${derby.version}/derbyclient-${derby.version}.jar</liberty.var.derbyclientpath>
		<liberty.var.derbytoolspath>${repo.dir}/org/apache/derby/derbytools/${derby.version}/derbytools-${derby.version}.jar</liberty.var.derbytoolspath>
		<liberty.var.derbysharedpath>${repo.dir}/org/apache/derby/derbyshared/${derby.version}/derbyshared-${derby.version}.jar</liberty.var.derbysharedpath>
		<!-- Spring Exression Libraries (CDI project) -->
		<liberty.var.springexpression>${repo.dir}/org/springframework/spring-expression/${spring-framework.version}/spring-expression-${spring-framework.version}.jar</liberty.var.springexpression>
		<liberty.var.springcore>${repo.dir}/org/springframework/spring-core/${spring-framework.version}/spring-core-${spring-framework.version}.jar</liberty.var.springcore>
		<liberty.var.springjcl>${repo.dir}/org/springframework/spring-jcl/${spring-framework.version}/spring-jcl-${spring-framework.version}.jar</liberty.var.springjcl>

		<!-- default profile, also see wildfly.cli, server.env -->
		<active.profiles>local</active.profiles>
	</properties>

	<modules>
		<module>learn-jakartaee-config</module>
		<module>learn-jakartaee-env</module>
		<module>learn-jakartaee-security</module>
		<module>learn-jakartaee-datasource</module>
		<module>learn-jakartaee-ejb</module>
		<module>learn-jakartaee-jaxrs</module>
		<module>learn-jakartaee-jaxws</module>
		<module>learn-jakartaee-jsp</module>
		<module>learn-jakartaee-jsf</module>
		<module>learn-jakartaee-struts</module>
		<module>learn-jakartaee-spring</module>
		<module>learn-jakartaee-ldap-server</module>
		<module>learn-jakartaee-index</module>
		<module>learn-jakartaee-ear</module>
		<module>learn-jakartaee-cdi</module>
		<module>learn-jakartaee-legacy-support</module>
		<module>learn-jakartaee-test</module>
		<!-- module>learn-jakartaee-docs</module -->
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakarta.jakartaee-bom</artifactId>
				<version>${jakartaee.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakarta.jakartaee-web-api</artifactId>
				<version>${jakartaee.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.microprofile</groupId>
				<artifactId>microprofile</artifactId>
				<version>${microprofile.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>liberty</id>
			<build>
				<plugins>
					<plugin>
						<!-- mvn -P liberty liberty:run -->
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<version>${liberty-maven-plugin.version}</version>
						<configuration>
							<runtimeArtifact>
								<groupId>io.openliberty</groupId>
								<artifactId>openliberty-jakartaee9</artifactId>
								<version>${liberty-runtime.version}</version>
								<type>zip</type>
							</runtimeArtifact>
							<stripVersion>true</stripVersion>
							<looseApplication>${liberty.loose-application}</looseApplication>
							<!-- See server.env for env variables -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>wildfly</id>
			<build>
				<plugins>
					<plugin>
						<!-- mvn -P wildfly cargo:run -->
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven3-plugin</artifactId>
						<version>${cargo-maven-plugin.version}</version>
						<configuration>
							<container>
								<containerId>${cargo-wildfly-runtime}</containerId>
								<systemProperties>
									<!-- see wildfly.cli -->
								</systemProperties>
							</container>
							<configuration>
								<properties>
									<cargo.start.jvmargs>
										--add-opens java.base/java.lang=ALL-UNNAMED
										--add-opens java.base/java.util=ALL-UNNAMED
										--add-opens java.base/java.io=ALL-UNNAMED
										--add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
									</cargo.start.jvmargs>
									<cargo.wildfly.script.cli.embedded>${cargo-wildfly-script.dir}/wildfly.cli</cargo.wildfly.script.cli.embedded>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>glassfish</id>
			<build>
				<plugins>
					<plugin>
						<!-- mvn -P glassfish cargo:run -->
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven3-plugin</artifactId>
						<version>${cargo-maven-plugin.version}</version>
						<configuration>
							<container>
								<containerId>${cargo-glassfish-runtime}</containerId>
								<systemProperties>
									<spring.profiles.active>${active.profiles}</spring.profiles.active>
									<app.profiles.active>${active.profiles}</app.profiles.active>
									<test.users.enabled>true</test.users.enabled>
								</systemProperties>
							</container>
							<configuration>
								<properties>
									<cargo.start.jvmargs>
										--add-opens java.base/java.lang=ALL-UNNAMED
										--add-opens java.base/java.util=ALL-UNNAMED
										--add-opens java.base/java.io=ALL-UNNAMED
									</cargo.start.jvmargs>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>tomee</id>
			<build>
				<plugins>
					<plugin>
						<!-- mvn -P tomee tomee:run -->
						<groupId>org.apache.tomee.maven</groupId>
						<artifactId>tomee-maven-plugin</artifactId>
						<version>${tomee-maven-plugin.version}</version>
						<configuration>
							<tomeeVersion>${tomee-runtime.version}</tomeeVersion>
							<tomeeClassifier>plus</tomeeClassifier>
							<args>--add-opens java.base/java.lang=ALL-UNNAMED</args>
							<systemVariables>
								<tomee.mp.scan>all</tomee.mp.scan>
								<!-- TomEE does not use the usual location -->
								<mp.openapi.servers>/${project.artifactId}</mp.openapi.servers>
								<openapi.ui.yamlUrl>/${project.artifactId}/openapi</openapi.ui.yamlUrl>
								<spring.profiles.active>${active.profiles}</spring.profiles.active>
								<app.profiles.active>${active.profiles}</app.profiles.active>
								<test.users.enabled>true</test.users.enabled>
							</systemVariables>
							<context>${project.artifactId}</context>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<!-- TomEE test cases need this module setting -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<browser>phantomjs</browser>
					</systemPropertyVariables>
					<argLine>
						--add-opens java.base/java.lang=ALL-UNNAMED
						--add-opens java.base/java.util=ALL-UNNAMED
						--add-opens java.base/java.io=ALL-UNNAMED
						--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
